"""empty message

Revision ID: 6e863341ecac
Revises:
Create Date: 2025-08-28 15:24:10.735121

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6e863341ecac"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False),
        sa.Column("is_activated", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("hashed_password", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("balance", sa.Integer(), nullable=False),
        sa.Column("is_activated", sa.Boolean(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_accounts_id"), "accounts", ["id"], unique=False)
    op.create_table(
        "secret_keys",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("secret_key", sa.String(length=150), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("secret_key"),
    )
    op.create_index(
        op.f("ix_secret_keys_id"), "secret_keys", ["id"], unique=False
    )
    op.create_table(
        "tokens",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("token", sa.String(length=300), nullable=False),
        sa.Column("expires", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tokens_id"), "tokens", ["id"], unique=False)
    op.create_index(op.f("ix_tokens_token"), "tokens", ["token"], unique=True)
    op.create_table(
        "payments",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Uuid(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"], ["accounts.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("transaction_id"),
    )
    op.create_index(op.f("ix_payments_id"), "payments", ["id"], unique=False)
    # insert data
    op.bulk_insert(
        sa.Table('users', sa.MetaData(),
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False, primary_key=True),
            sa.Column("first_name", sa.String(length=50), nullable=False),
            sa.Column("last_name", sa.String(length=50), nullable=False),
            sa.Column("email", sa.String(length=50), nullable=False),
            sa.Column("is_activated", sa.Boolean(), nullable=False),
            sa.Column("is_admin", sa.Boolean(), nullable=False),
            sa.Column("hashed_password", sa.String(length=100), nullable=False),
        ),
        [
            {
                'first_name': 'test_user', 
                'last_name': 'test_user', 
                'email': 'test_user@mail.ru', 
                'is_activated': True, 
                'is_admin': False, 
                'hashed_password': 'IjQQPtNYXaLY$62285ee8c136f05cfffd5350dbbfc92e39b05349811702b1f002abb9abd7e4d8'
            },
            {
                'first_name': 'test_admin', 
                'last_name': 'test_admin', 
                'email': 'test_admin@mail.ru', 
                'is_activated': True, 
                'is_admin': True, 
                'hashed_password': 'bTzTzoZLeWKi$5cde3d6168d27855c2e24821aa302b62159be66990b751ac67ce69beaf4b2191'
            },
        ]
    )
    op.bulk_insert(
        sa.Table('accounts', sa.MetaData(),
            sa.Column("id", sa.Integer(), autoincrement=True, nullable=False, primary_key=True),
            sa.Column("balance", sa.Integer(), nullable=False),
            sa.Column("is_activated", sa.Boolean(), nullable=False),
            sa.Column("user_id", sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE")
        ),
        [
            {
                'balance': 0, 
                'is_activated': True, 
                'user_id': 1, 
            },
            {
                'balance': 110, 
                'is_activated': True, 
                'user_id': 2, 
            },
        ]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_payments_id"), table_name="payments")
    op.drop_table("payments")
    op.drop_index(op.f("ix_tokens_token"), table_name="tokens")
    op.drop_index(op.f("ix_tokens_id"), table_name="tokens")
    op.drop_table("tokens")
    op.drop_index(op.f("ix_secret_keys_id"), table_name="secret_keys")
    op.drop_table("secret_keys")
    op.drop_index(op.f("ix_accounts_id"), table_name="accounts")
    op.drop_table("accounts")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # delete data
    op.execute("DELETE FROM users WHERE email IN ('test_user@mail.ru', 'test_admin@mail.ru')")
    op.execute("DELETE FROM accounts")
    # ### end Alembic commands ###
